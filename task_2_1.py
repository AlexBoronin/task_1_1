# Для кубов нечётных чисел
# Вычислить сумму чисел,
# сумма цифр кубов которых делится нацело на 7.
# Например:
# 19 ^3: 6859 sum: 19 [ 28 ]
# 31 ^3: 29791 sum: 50 [ 28 ]
# 43 ^3: 79507 sum: 93 [ 28 ]
#
# Примеры:
# число 19, 19 ^ 3 = 6859, сумма чисел 6 + 8 + 5 + 9 = 28 – делится нацело на 7. Поэтому
# 19 включаем в вывод.
#
# Алгоритм:
# Ваш алгоритм должен корректно работать для всех чисел интервала от 1 до 1000,
# но для любого числа(заведенного в код), например от 1 до 10000000.
# Сумма считается для самих чисел 19, 31, 43 и т.п. Не для кубов.
# Первый шаг - получить разряды числа(цифры), т.е. из 6859 получить отдельные цифры 6,8,5,9.
# Это делается за счет целочисленного деления на 10 и взятие остатка от этого деления.
# Не используйте операции со строками. Поэкспериментируйте.
# Вы не знаете заранее насколько большим(длинным) будет это число. Используйте цикл.
# Подумайте по какому условию вы из него выйдете. Отладьте этот алгоритм и подсчитайте сумму цифр
# для куба произвольного числа.
# Сделайте алгоритм предыдущего пункта частью цикла по числам от 1 до 1000 (нечетным).
# Вам понадобится накопительная сумма.
# Подумайте как лаконично реализовать проход только по нечетным числам.

number = int(input('Enter any number: '))
i = 0
sum_number = 0
while i != number:
    i = i + 1
    if i % 2 == 0:
        continue
    cube = i ** 3

    result = 0
    while cube > 0:
        remain = cube % 10
        result += remain
        cube //= 10
    if result % 7 == 0:
        sum_number += i
        print(i, '^3:', i ** 3, 'sum:', sum_number, '[', result, ']')
